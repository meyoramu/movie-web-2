version: '3.8'

services:
  # Web Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cineverse_app
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
      - ./public/uploads:/var/www/html/public/uploads
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=cineverse_db
      - DB_USERNAME=cineverse_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
    depends_on:
      - db
      - redis
    networks:
      - cineverse_network

  # Database
  db:
    image: mysql:8.0
    container_name: cineverse_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: cineverse_db
      MYSQL_USER: cineverse_user
      MYSQL_PASSWORD: secure_password
    volumes:
      - db_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - cineverse_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cineverse_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    networks:
      - cineverse_network

  # Nginx (Alternative to Apache)
  nginx:
    image: nginx:alpine
    container_name: cineverse_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - cineverse_network

  # Queue Worker (for background jobs)
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cineverse_queue
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    command: php artisan queue:work --sleep=3 --tries=3
    depends_on:
      - db
      - redis
    networks:
      - cineverse_network

  # Scheduler (for cron jobs)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cineverse_scheduler
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - REDIS_HOST=redis
    command: php artisan schedule:run
    depends_on:
      - db
      - redis
    networks:
      - cineverse_network

  # Mailhog (for email testing in development)
  mailhog:
    image: mailhog/mailhog
    container_name: cineverse_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - cineverse_network
    profiles:
      - development

  # Adminer (Database management)
  adminer:
    image: adminer
    container_name: cineverse_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - cineverse_network
    profiles:
      - development

  # Elasticsearch (for advanced search)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: cineverse_elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - cineverse_network
    profiles:
      - advanced

  # Kibana (for Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: cineverse_kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - cineverse_network
    profiles:
      - advanced

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  cineverse_network:
    driver: bridge
